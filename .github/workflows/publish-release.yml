name: Publish Release

on:
  workflow_dispatch:
    inputs:
      override-tag:
        description: override the tag to be released
        type: string
        required: false
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  CARGO_RELEASE_VERSION: 0.25.18
  GH_TOKEN: ${{ github.token }}
  VERSION_TAG: ${{ inputs.override_tag }}

jobs:
  select-tag:
    name: Select Tag
    runs-on: ubuntu-latest

    outputs:
      should-release: ${{ steps.select-version.outputs.version-tag != '' && (steps.should-release.outcome == 'failure' || steps.should-release.outcome == 'skipped') }}
      version-tag: ${{ steps.select-version.outputs.version-tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Select tag to be released
        id: select-version
        run: |
          if [ -z "${{inputs.override-tag}}" ]; then
            echo ::set-output version-tag=$(git describe --tags --abbrev=0)
          else
            echo ::set-output version-tag=${{ inputs.override-tag }}
          fi
      - name: On automatic tag selection verify that release doesn't exist yet
        id: should-release
        if: "!inputs.override-tag"
        run: gh release view ${{ steps.select-version.version-tag }}
        continue-on-error: true

  release:
    name: Publish Release
    runs-on: ubuntu-latest

    needs: select-tag
    if: fromJSON(needs.select-tag.outputs.should-release)

    env:
      VERSION_TAG: ${{ needs.select-tag.outputs.version-tag }}

    steps:
      - uses: dtolnay/rust-toolchain@stable
        id: toolchain
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }};rust@${{ steps.toolchain.outputs.cachekey }};Cargo.lock@${{ hashFiles('**/Cargo.lock') }}
          restore-key:
            ${{ runner.os }};rust@${{ steps.toolchain.outputs.cachekey }};Cargo.lock@${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }};rust@${{ steps.toolchain.outputs.cachekey }};Cargo.lock@
            ${{ runner.os }};rust@
            ${{ runner.os }};

      - name: Checkout tagged commit
        run: git switch --detach $VERSION_TAG
      - run: cargo publish
      - run: gh release create $VERSION_TAG --notes "$(sed -n '/##\s*\['${VERSION_TAG:1}'/,/## \[/p' CHANGELOG.md | sed '1d;$d')"
