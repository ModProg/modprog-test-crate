name: Publish Release

on:
  workflow_dispatch:
    inputs:
      override-tag:
        description: override the tag to be released
        type: string
        required: false
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  CARGO_RELEASE_VERSION: 0.25.18
  GH_TOKEN: ${{ github.token }}

permissions:
  packages: write
  contents: write

jobs:
  select-tags:
    name: Select Tags
    runs-on: ubuntu-latest

    outputs:
      version-tags: ${{ steps.filter-tags.outputs.version-tags }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Select tag to be released
        id: filter-tags
        run: |
          if [ -z "${{inputs.override-tag}}" ]; then
            echo version-tags=$(comm -3 <(git tag --list --merged | sort) <(gh release list --json tagName -q '.[].tagName' | sort) | grep -e "^v[0-9].*" | jq -R -s -c 'split("\n") | map(select(length > 0))') >> $GITHUB_OUTPUT
          else
            echo version-tags='["${{ inputs.override-tag }}"]' >> $GITHUB_OUTPUT
          fi

  release:
    name: Publish Release
    runs-on: ubuntu-latest
      

    needs: select-tags
    if: "fromJSON(needs.select-tags.outputs.version-tags) != fromJSON('[]')"
    strategy:
      matrix:
        version-tag: ${{ fromJSON(needs.select-tags.outputs.version-tags) }}

    env:
      VERSION_TAG: ${{ matrix.version-tag }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.VERSION_TAG }}
      - uses: dtolnay/rust-toolchain@stable
        id: toolchain
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }};rust@${{ steps.toolchain.outputs.cachekey }};Cargo.lock@${{ hashFiles('**/Cargo.lock') }}
          restore-keys:
            ${{ runner.os }};rust@${{ steps.toolchain.outputs.cachekey }};Cargo.lock@${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }};rust@${{ steps.toolchain.outputs.cachekey }};Cargo.lock@
            ${{ runner.os }};rust@
            ${{ runner.os }};

      - name: Checkout tagged commit
        run: git switch --detach $VERSION_TAG
      - name: Check if crate already published
        id: already-published-check
        run: cargo info  --registry crates-io -- $(cargo metadata --no-deps --format-version=1 | jq .packages[0].name --raw-output)@${VERSION_TAG:1} 
        continue-on-error: true
      - run: cargo publish
        if: "steps.already-published-check.outcome == 'failure'"
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - run: gh release create $VERSION_TAG --notes "$(sed -n '/##\s*\['${VERSION_TAG:1}'/,/## \[/p' CHANGELOG.md | sed '1d;$d')"
